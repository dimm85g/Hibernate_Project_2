Проект по теме: Hibernate (2)


Скачать дамп-файл и развернуть его у себя на локальной машине. В качестве БД мы будем использовать тестовую БД,
которая распространяется в качестве примера вместе с установочным пакетом MySQL.


Основное задание – нужно создать все необходимые энтити классы и замапить их на таблицы схемы movie.

Добавить метод, который умеет создавать нового покупателя (таблица customer) со всеми зависимыми полями.
Не забудь сделать чтоб метод был транзакционным (чтоб не попасть в ситуацию что адрес покупателя записали в БД,
а самого покупателя – нет).

Добавить транзакционный метод, который описывает событие «покупатель пошел и вернул ранее арендованный фильм».
Покупателя и событие аренды выбери любое на свое усмотрение. Рейтинг фильма пересчитывать не нужно.

Добавить транзакционный метод, который описывает событие «покупатель сходил в магазин (store) и арендовал (rental)
там инвентарь (inventory). При этом он сделал оплату (payment) у продавца (staff)». Фильм (через инвентарь) выбери
на свое усмотрение. Единственное ограничение – фильм должен быть доступен для аренды. То есть либо в rental не должно
быть вообще записей по инвентарю, либо должна быть заполнена колонка return_date таблицы rental для последней аренды
этого инвентаря.

Добавить транзакционный метод, который описывает событие «сняли новый фильм, и он стал доступен для аренды».
Фильм, язык, актеров, категории и т д выбери на свое усмотрение.

Структуру таблиц менять нельзя. Но внести свои предложения по улучшению – нужно. Одно проблемное место мы выявили
в п.4 (отсутствие foreign key в таблице film_text на поле film_id таблицы film). Посмотри, есть ли еще в структуре
БД такие «ляпы». Если да – добавь readme файл в корень проекта и опиши эти ляпы.